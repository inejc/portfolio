{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/index.js"],"names":["props","React","createElement","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","Link","to","fields","slug","title","BlogIndex","_ref","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","Layout","SEO","keywords","description","href","target","xmlns","width","height","fill","viewBox","d","map","_ref2","PostCard","key","StaticQuery","query","render","Object","assign"],"mappings":"sLAGeA,KACbC,IAAAC,cAAA,WACEC,UAAY,aAAYH,EAAMI,MAAQ,GAAM,GAAM,qBAChDJ,EAAMK,aACJL,EAAMM,KAAKC,YAAYC,UAAa,aAAe,aACvDC,MACET,EAAMM,KAAKC,YAAYC,WAAa,CAClCE,gBAAkB,OAChBV,EAAMM,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,SAK7DZ,IAAAC,cAACY,OAAI,CAACC,GAAIf,EAAMM,KAAKU,OAAOC,KAAMd,UAAU,kBAC1CF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,MAAIC,UAAU,mBACXH,EAAMM,KAAKC,YAAYW,OAASlB,EAAMM,KAAKU,OAAOC,S,oBCT7D,MAAME,EAAYA,CAAAC,EAAWC,KAAc,IAAxB,KAAEC,GAAMF,EACzB,MAAMG,EAAYD,EAAKE,KAAKC,aAAaP,MACnCQ,EAAQJ,EAAKK,kBAAkBC,MACrC,IAAIC,EAAc,EAElB,OACE5B,IAAAC,cAAC4B,IAAM,CAACZ,MAAOK,GACbtB,IAAAC,cAAC6B,IAAG,CACFb,MAAM,YACNc,SAAU,CAAE,cAAe,eAE5BV,EAAKE,KAAKC,aAAaQ,aACtBhC,IAAAC,cAAA,UAAQC,UAAU,aAChBF,IAAAC,cAAA,MAAIC,UAAU,mBACXmB,EAAKE,KAAKC,aAAaQ,aAE1BhC,IAAAC,cAAA,KAAGgC,KAAK,yCAAyCC,OAAO,QAAQhC,UAAU,eACxEF,IAAAC,cAAA,OAAKC,UAAU,8BAA8BiC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeC,QAAQ,aACjIvC,IAAAC,cAAA,QAAMuC,EAAE,66CACJ,gBAKZxC,IAAAC,cAAA,OAAKC,UAAU,aACZuB,EAAMgB,IAAIC,IAAe,IAAd,KAAErC,GAAMqC,EAElB,OADAd,IAEE5B,IAAAC,cAAC0C,EAAQ,CACPC,IAAKvC,EAAKU,OAAOC,KACjBb,MAAOyB,EACPvB,KAAMA,EACND,UAAY,YAKpBJ,IAAAC,cAAA,OAAKC,UAAU,oBAsCNH,aACbC,IAAAC,cAAC4C,cAAW,CACVC,MAnCY,aAoCZC,OAAQ1B,GACNrB,IAAAC,cAACiB,EAAS8B,OAAAC,OAAA,CAAC7B,SAAUrB,EAAMqB,SAAUrB,OAAK,EAACsB,KAAMA,GAAUtB,O","file":"component---src-pages-index-js-0df22a49544e87b26802.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst BlogIndex = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Portfolio\"\n        keywords={[`photography`, `portfolio`]}\n      />\n      {data.site.siteMetadata.description && (\n        <header className=\"page-head\">\n          <h2 className=\"page-head-title\">\n            {data.site.siteMetadata.description}\n          </h2>\n          <a href=\"https://www.instagram.com/nejc.ilenic/\" target=\"blank\" className=\"social-link\">\n            <svg className=\"bi bi-instagram social-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n              <path d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.9 3.9 0 0 0-1.417.923A3.9 3.9 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.9 3.9 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.9 3.9 0 0 0-.923-1.417A3.9 3.9 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599s.453.546.598.92c.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.5 2.5 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.5 2.5 0 0 1-.92-.598 2.5 2.5 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233s.008-2.388.046-3.231c.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92s.546-.453.92-.598c.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92m-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217m0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334\"></path>\n            </svg>\n            nejc.ilenic\n          </a>\n        </header>\n      )}\n      <div className=\"post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`post`}\n            />\n          )\n        })}\n      </div>\n      <div className=\"post-feed-end\"></div>\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 3000) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogIndex location={props.location} props data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}